apply plugin: 'idea'
apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.example.tinyjavaposttester"
        minSdkVersion 12
        targetSdkVersion 25
        versionCode 1
        versionName "$version"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    
    signingConfigs {
        release {
            storeFile file("${projectDir}/tinyJavaPOSTester-release-key.keystore")
            storePassword "123456"
            keyAlias "tinyJavaPOSTester"
            keyPassword "123456"
        }
    }
    
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            
            applicationVariants.all { variant ->
                renameAPK(variant)
            }
        }
    }
    
    productFlavors {
    }

    sourceSets {
        main {
            java {
                srcDirs = ["${projectDir}/src"]
            }
            res {
                srcDirs = ["${projectDir}/res"]
            }
            assets {
                srcDirs = ["${projectDir}/assets"]
            }
            manifest {
                srcFile "${projectDir}/AndroidManifest.xml"
            }
        }
    }
    
    lintOptions {
        abortOnError false
    }
}

repositories {
    jcenter()

    flatDir {
        dirs = ['../lib']
    }
}

dependencies {
    //compile fileTree(include: ['*.jar'], dir: '../lib')
    compile project(':FptrServiceAndroid')
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.android.support:support-v4:25.1.0'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'com.github.tony19:logback-android-core:1.1.1-6'
    compile('com.github.tony19:logback-android-classic:1.1.1-6') {
      // workaround issue #73
      exclude group: 'com.google.android', module: 'android'
    }
}

task dist(type: Copy) {
    destinationDir = new File("${rootDir}/../../dist/zip/android")
    
    from "${rootDir}/tinyJavaPosTester/build/outputs/apk/" + apkName()
}

def renameAPK(variant) {
     variant.outputs.each { output ->
         def file = output.packageApplication.outputFile
         def fileName = apkName()
         output.packageApplication.outputFile = new File(file.parent, fileName)
     }
 }
 
 def apkName(){
    return "tinyJavaPosTester_v${version}.apk";
 }
